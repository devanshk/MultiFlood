import Generator from 'yeoman-generator';
export interface Config extends Object {
    item?: {
        name: string;
    };
    topScope?: string[];
    configName?: string;
    merge: string | string[];
    webpackOptions: object;
}
export interface TransformConfig extends Object {
    configPath?: string;
    configFile?: string;
    config?: Config;
}
export interface WebpackScaffoldObject extends Object {
    config: {
        configName?: string;
        topScope?: string[];
        webpackOptions?: object;
    };
    usingDefaults?: boolean;
}
/**
 *
 * Looks up the webpack.config in the user's path and runs a given
 * generator scaffold followed up by a transform
 *
 * @param {String} action â€” action to be done (add, remove, update, init)
 * @param {Class} generator - Yeoman generator class
 * @param {String} configFile - Name of the existing/default webpack configuration file
 * @param {Array} packages - List of packages to resolve
 * @returns {Function} runTransform - Returns a transformation instance
 */
export declare function modifyHelperUtil(action: string, generator: Generator.GeneratorConstructor, configFile?: string, packages?: string[], autoSetDefaults?: boolean, generateConfig?: boolean): void;
