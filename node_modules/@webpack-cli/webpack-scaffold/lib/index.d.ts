import Generator from 'yeoman-generator';
declare type CustomGeneratorStringPrompt = {
    [x: string]: string;
} | Promise<{
    [x: string]: string;
}>;
declare type CustomGeneratorBoolPrompt = {
    [x: string]: boolean;
} | Promise<{
    [x: string]: boolean;
}>;
export declare function createArrowFunction(value: string): string;
export declare function createRegularFunction(value: string): string;
export declare function createDynamicPromise(arrOrString: string[] | string): string;
export declare function createAssetFilterFunction(value: string): string;
export declare function createExternalFunction(regexp: string): string;
export declare function parseValue(regexp: string): string;
export declare function createRequire(val: string): string;
export declare function List(self: Generator, name: string, message: string, choices: string[], defaultChoice?: string, skip?: boolean): CustomGeneratorStringPrompt;
export declare function RawList(name: string, message: string, choices: string[]): Generator.Question;
export declare function CheckList(name: string, message: string, choices: string[]): Generator.Question;
export declare function Input(self: Generator, name: string, message: string, defaultChoice?: string, skip?: boolean): CustomGeneratorStringPrompt;
export declare function InputValidate(self: Generator, name: string, message: string, cb?: (input: string) => string | boolean, defaultChoice?: string, skip?: boolean): object | any;
export declare function Confirm(self: Generator, name: string, message: string, defaultChoice?: boolean, skip?: boolean): CustomGeneratorBoolPrompt;
export declare function AutoComplete(name: string, message: string, options?: object): any;
export {};
